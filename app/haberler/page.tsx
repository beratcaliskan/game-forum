'use client';import { useState, useEffect } from 'react';import Link from 'next/link';import { supabase } from '@/lib/supabase';import { useAuth } from '@/lib/AuthContext';import { FaEye, FaComment, FaThumbsUp, FaClock, FaUser, FaNewspaper, FaPaperPlane } from 'react-icons/fa';type NewsThread = {  id: number;  title: string;  content: string;  created_at: string;  view_count: number;  author: {    username: string;    display_name?: string;    avatar_url?: string;  };  categories?: {    name: string;  };  posts_count: number;  likes_count: number;};export default function NewsPage() {  const { user } = useAuth();  const [news, setNews] = useState<NewsThread[]>([]);  const [loading, setLoading] = useState(true);  const [error, setError] = useState<string | null>(null);  const fetchNews = async () => {    try {      setLoading(true);      const { data: categoryData, error: categoryError } = await supabase        .from('categories')        .select('id')        .eq('name', 'Haberler')        .single();      if (categoryError || !categoryData) {        throw new Error('Haberler kategorisi bulunamadı');      }      const { data, error } = await supabase        .from('threads')        .select(`          id,          title,          content,          created_at,          view_count,          profiles!threads_author_id_fkey (            username,            display_name,            avatar_url          ),          categories (            id,            name          )        `)        .eq('category_id', categoryData.id)        .order('created_at', { ascending: false });      if (error) throw error;      const newsWithStats = await Promise.all(        (data || []).map(async (thread) => {          const { count: postsCount } = await supabase            .from('posts')            .select('*', { count: 'exact', head: true })            .eq('thread_id', thread.id);          const { count: likesCount } = await supabase            .from('thread_likes')            .select('*', { count: 'exact', head: true })            .eq('thread_id', thread.id);          return {            id: thread.id,            title: thread.title,            content: thread.content,            created_at: thread.created_at,            view_count: thread.view_count,            author: Array.isArray(thread.profiles) ? thread.profiles[0] : thread.profiles,            categories: Array.isArray(thread.categories) ? thread.categories[0] : thread.categories,            posts_count: postsCount || 0,            likes_count: likesCount || 0,          };        })      );      setNews(newsWithStats);    } catch (error: any) {      console.error('Haberler alınırken hata:', error);      setError(error.message || 'Haberler yüklenirken bir hata oluştu');    } finally {      setLoading(false);    }  };  useEffect(() => {    fetchNews();  }, []);  const formatDate = (dateString: string) => {    const date = new Date(dateString);    const now = new Date();    const diffInMs = now.getTime() - date.getTime();    const diffInMinutes = Math.floor(diffInMs / (1000 * 60));    const diffInHours = Math.floor(diffInMs / (1000 * 60 * 60));    const diffInDays = Math.floor(diffInMs / (1000 * 60 * 60 * 24));    if (diffInMinutes < 60) {      return `${diffInMinutes} dakika önce`;    } else if (diffInHours < 24) {      return `${diffInHours} saat önce`;    } else if (diffInDays < 30) {      return `${diffInDays} gün önce`;    } else {      return date.toLocaleDateString('tr-TR', {        year: 'numeric',        month: 'long',        day: 'numeric'      });    }  };  const truncateContent = (content: string, maxLength: number = 150) => {    if (content.length <= maxLength) return content;    return content.substring(0, maxLength) + '...';  };  return (    <div className="bg-dark-900 min-h-screen">      <div className="max-w-7xl mx-auto px-4 py-8">        <div className="text-center mb-12">          <div className="flex items-center justify-center gap-3 mb-4">            <div className="text-4xl text-blue-500">              <FaNewspaper />            </div>            <h1 className="text-4xl font-bold text-white">Oyun Haberleri</h1>          </div>          <p className="text-gray-400 text-lg max-w-2xl mx-auto mb-6">            Oyun dünyasından en son haberler, duyurular ve gelişmeler.             Yeni çıkacak oyunlar, güncellemeler ve oyun endüstrisinden haberler.          </p>          {user ? (            <Link               href="/forum/new?category=Haberler"              className="inline-flex items-center gap-2 bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white px-6 py-3 rounded-lg transition-all duration-300 shadow-lg hover:shadow-xl hover:shadow-blue-500/25 transform hover:scale-105"            >              <FaPaperPlane className="text-sm" />              <span className="font-medium">Haber Paylaş</span>            </Link>          ) : (            <div className="flex items-center justify-center gap-3">              <span className="text-gray-400">Haber paylaşmak için</span>              <Link                 href="/auth/login"                className="inline-flex items-center gap-2 bg-gradient-to-r from-blue-600 to-blue-700 hover:from-blue-700 hover:to-blue-800 text-white px-4 py-2 rounded-lg transition-all duration-300 shadow-lg hover:shadow-xl hover:shadow-blue-500/25"              >                <FaUser className="text-sm" />                <span>Giriş Yap</span>              </Link>            </div>          )}        </div>        {loading && (          <div className="flex justify-center py-20">            <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500"></div>          </div>        )}        {error && (          <div className="bg-red-500/20 border border-red-500 text-red-300 px-6 py-4 rounded-lg mb-8 text-center">            {error}          </div>        )}        {!loading && !error && (          <>            {news.length === 0 ? (              <div className="text-center py-20">                <div className="text-6xl text-gray-600 mb-4">                  <FaNewspaper />                </div>                <h3 className="text-xl font-semibold text-gray-400 mb-2">                  Henüz haber bulunmuyor                </h3>                <p className="text-gray-500">                  İlk haberi paylaşmak için forum kısmına gidin.                </p>                <Link                   href="/forum/new?category=Haberler"                   className="inline-block mt-4 px-6 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors"                >                  Haber Paylaş                </Link>              </div>            ) : (              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">                {news.map((newsItem, index) => {                  const getCardSize = (index: number) => {                    if (index === 0) return 'md:col-span-2 lg:col-span-2';                    if ((index + 1) % 4 === 0) return 'md:col-span-2 lg:col-span-1';                    return 'md:col-span-1 lg:col-span-1';                  };                  const cardSizeClass = getCardSize(index);                  const isLarge = cardSizeClass.includes('col-span-2');                  return (                    <article                       key={newsItem.id}                      className={`bg-dark-800 rounded-xl overflow-hidden border border-dark-700 hover:border-blue-500/50 transition-all duration-300 hover:shadow-lg hover:shadow-blue-500/10 group ${cardSizeClass}`}                    >                      <div className="p-6 h-full flex flex-col">                        <div className="mb-4">                          <Link                             href={`/forum/thread/${newsItem.id}`}                            className="block group-hover:text-blue-400 transition-colors"                          >                            <h2 className={`font-bold text-white mb-2 line-clamp-2 ${isLarge ? 'text-2xl' : 'text-lg'}`}>                              {newsItem.title}                            </h2>                          </Link>                          <div className="flex items-center gap-3 text-sm text-gray-400 mb-3">                            <div className="flex items-center gap-2">                              <FaUser className="text-xs" />                              <span>{newsItem.author?.display_name || newsItem.author?.username}</span>                            </div>                            <div className="flex items-center gap-2">                              <FaClock className="text-xs" />                              <span>{formatDate(newsItem.created_at)}</span>                            </div>                          </div>                        </div>                        <div className="flex-1 mb-4">                          <p className={`text-gray-300 ${isLarge ? 'line-clamp-4' : 'line-clamp-3'}`}>                            {truncateContent(newsItem.content, isLarge ? 300 : 150)}                          </p>                        </div>                        <div className="flex items-center justify-between pt-4 border-t border-dark-600">                          <div className="flex items-center gap-4 text-sm text-gray-400">                            <div className="flex items-center gap-1">                              <FaEye className="text-xs" />                              <span>{newsItem.view_count}</span>                            </div>                            <div className="flex items-center gap-1">                              <FaComment className="text-xs" />                              <span>{newsItem.posts_count}</span>                            </div>                            <div className="flex items-center gap-1">                              <FaThumbsUp className="text-xs" />                              <span>{newsItem.likes_count}</span>                            </div>                          </div>                          <Link                             href={`/forum/thread/${newsItem.id}`}                            className="text-blue-400 hover:text-blue-300 text-sm font-medium transition-colors"                          >                            Devamını Oku →                          </Link>                        </div>                      </div>                    </article>                  );                })}              </div>            )}          </>        )}      </div>    </div>  );} 