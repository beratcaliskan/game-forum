'use client';import { useState } from 'react';import { useRouter } from 'next/navigation';import Link from 'next/link';import { registerUser } from '../../../lib/supabase';export default function Register() {  const router = useRouter();  const [username, setUsername] = useState('');  const [email, setEmail] = useState('');  const [password, setPassword] = useState('');  const [loading, setLoading] = useState(false);  const [error, setError] = useState<string | null>(null);  const handleRegister = async (e: React.FormEvent) => {    e.preventDefault();    try {      setLoading(true);      setError(null);      const { user, error } = await registerUser(username, email, password);      if (error || !user) {        throw new Error(error || 'Kayıt olurken bir hata oluştu');      }      router.push('/auth/login');    } catch (error: any) {      setError(error.message || 'Kayıt olurken bir hata oluştu');    } finally {      setLoading(false);    }  };  return (    <div className="min-h-screen flex items-center justify-center bg-dark-800 py-12 px-4 sm:px-6 lg:px-8">      <div className="max-w-md w-full space-y-8">        <div>          <h1 className="mt-6 text-center text-3xl font-extrabold text-white">            Hesap Oluşturun          </h1>          <p className="mt-2 text-center text-sm text-gray-600">            Veya{' '}            <Link href="/auth/login" className="font-medium text-primary-600 hover:text-primary-400">              mevcut hesabınızla giriş yapın            </Link>          </p>        </div>        <form className="mt-8 space-y-6" onSubmit={handleRegister}>          <div className="rounded-md shadow-sm -space-y-px">            <div>              <label htmlFor="username" className="sr-only">                Kullanıcı Adı              </label>              <input                id="username"                name="username"                type="text"                required                className="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-primary-500 focus:border-primary-500 focus:z-10 sm:text-sm"                placeholder="Kullanıcı Adı"                value={username}                onChange={(e) => setUsername(e.target.value)}              />            </div>            <div>              <label htmlFor="email-address" className="sr-only">                E-posta Adresi              </label>              <input                id="email-address"                name="email"                type="email"                autoComplete="email"                required                className="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-primary-500 focus:border-primary-500 focus:z-10 sm:text-sm"                placeholder="E-posta Adresi"                value={email}                onChange={(e) => setEmail(e.target.value)}              />            </div>            <div>              <label htmlFor="password" className="sr-only">                Şifre              </label>              <input                id="password"                name="password"                type="password"                autoComplete="current-password"                required                className="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-primary-500 focus:border-primary-500 focus:z-10 sm:text-sm"                placeholder="Şifre (en az 6 karakter)"                value={password}                onChange={(e) => setPassword(e.target.value)}                minLength={6}              />            </div>          </div>          {error && (            <div className="text-red-500 text-sm text-center">{error}</div>          )}          <div>            <button              type="submit"              disabled={loading}              className="group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed"            >              {loading ? 'Kayıt yapılıyor...' : 'Kayıt Ol'}            </button>          </div>        </form>      </div>    </div>  );} 